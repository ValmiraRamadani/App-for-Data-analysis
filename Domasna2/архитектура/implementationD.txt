Дизајн на Имплементација за Апликацијата за Анализа на Податоци од Македонската Берза


Системот ќе биде имплементиран со модуларна архитектура, што ќе обезбеди скалабилност и одржливост. Главните компоненти вклучуваат React фронтенд, API Gateway, бекенд микросервиси, PostgreSQL за складирање и интеграција со надворешни извори на податоци во CSV формат.


1. Имплементација на Фронтенд

Технологија:
- ReactJS за корисничкиот интерфејс
- Axios за правење API повици
- Chart.js за прикажување на податоците за акции
- Redux (опционално) за управување со состојби

Одговорности:
- Прикажување на податоците добиени од API.
- Обезбедување интерактивни визуелизации, вклучувајќи трендови на цените на акциите.
- Овозможување на корисниците да бараат информации за специфични акции и да ги прикажуваат резултатите.
- Управување со внесување на форми и корисничка автентикација.

Клучни Карактеристики:
- Функционалност за пребарување компании.
- Прикажување на трендови на цените на акциите преку графикони.
- Кориснички интерфејс за интеракција со бекендот.

---

 2. API Gateway

Технологија:
- Node.js со Express.js (REST API)
- JWT за автентикација и авторизација
- Nginx (опционално) како реверзна прокси за оптоварување

Одговорности:
- Насочување на доаѓачките барања до соодветниот бекенд микросервис.
- Управување со безбедноста (на пр. автентикација, ограничување на барања).
- Агрегирање и враќање на одговори до фронтенд.

Клучни Карактеристики:
- Управување со API патеки.
- Middleware за валидација на барања.
- Автентикација (проверка на JWT токени).

---

3. Бекенд Микросервиси

а. Сервис за Податоци за Берзата

Технологија:
- Node.js или Python (Flask/Django)
- Библиотеки за Парсирање на CSV (на пр. csv-parser за Node.js или pandas за Python)

Одговорности:
- Обработка на доаѓачките CSV датотеки со податоци за берзата.
- Складирање и добивање податоци за акции од PostgreSQL базата на податоци.
- Изложување на крајни точки за добивање на историски податоци за акции и други релевантни метрики.

Клучни Карактеристики:
- Управување со CSV Датотеки: Прием на CSV податоци, парсирање и складирање во базата на податоци.
- Обработка на Податоци: Пресметување на просеци, волумени, промени во цените итн.
- Крајни точки:
  - /getStockData за добивање историски податоци за акции.
  - /getCompanyInfo за добивање информации за специфични компании.

б. Сервис за Корисници

Технологија:
- Node.js или Python (Flask/Django)
- bcrypt.js за хеширање на лозинки
- JWT за автентикација на базиран на токени

Одговорности:
- Управување со регистрација, влез и менаџмент на сесии на корисници.
- Складирање и добивање на податоци за корисниците (преференции, историја итн.).
- Автентикација на корисниците за пристап до заштитени крајни точки.

Клучни Карактеристики:
- Регистрација/Автентикација на Корисници: Хеширање на лозинки и управување со сесии.
- Крајни точки:
  - /register за регистрација на корисници.
  - /login за влез на корисници.
  - /getUserProfile за добивање на податоци за корисникот.

---

4. Складирање на Податоци (PostgreSQL База)

Технологија:
- PostgreSQL (Релациона база на податоци)
- Sequelize (ORM за Node.js) или SQLAlchemy (за Python)

Одговорности:
- Складирање на обработени податоци за берзанските акции, вклучувајќи:
  - Историски податоци за акции (Датум, Отворање, Затворање, Висока, Ниска, Волумен итн.).
  - Податоци за корисниците (акредитиви, преференции итн.).
- Обезбедување на ефикасна можност за пребарување на акциските податоци и податоците поврзани со корисниците.

Пример за Шема на Табелата за Податоци за Берзата:
```sql
CREATE TABLE stock_data (
  id SERIAL PRIMARY KEY,
  company_name VARCHAR(255),
  stock_symbol VARCHAR(10),
  date DATE,
  last_trade_price DECIMAL(10, 2),
  max_price DECIMAL(10, 2),
  min_price DECIMAL(10, 2),
  avg_price DECIMAL(10, 2),
  volume INT,
  turnover DECIMAL(10, 2),
  total_turnover DECIMAL(10, 2)
);
```

Пример за Шема на Табелата за Корисници:
```sql
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  username VARCHAR(50) UNIQUE NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  password_hash VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
```

---

5. Интеграција со Надворешни Податоци

Технологија:
- Node.js со csv-parser (или Python со pandas)
- Надворешен API (ако постои, како API на Македонската берза)

Одговорности:
- Довлечка на податоци за акции од надворешни извори како веб-страницата на Македонската берза или CSV датотеки.
- Парсирање на податоците и испраќање до бекендот за обработка.

Клучни Карактеристики:
- Увоз на CSV Податоци: Периодично повлекување на CSV датотеки, читање и обработка.
- Интеграција со Надворешен API: Довлечка на реални податоци за акции, ако е достапен надворешниот API.

---
6. Безбедносни Разгледи

- Автентикација: Имплементирање на JWT базирана автентикација за влез на корисниците и заштита на крајните точки.
- Авторизација: Осигурување дека корисниците можат да пристапат само до своите податоци.
- Валидација на Податоци: Употреба на правилна валидација на податоците за избегнување на напади и неправилна обработка.
- Шифрирање: Употреба на HTTPS за безбедна комуникација и bcrypt за хеширање на лозинки.

---

7. Деплојмент и Хостинг

- Деплојмент на Фронтенд: Хостинг на React апликацијата на услуга како Netlify или Vercel.
- Деплојмент на Бекенд: Хостинг на Node.js бекенд на Heroku, AWS или DigitalOcean.
- База на Податоци: Хостинг на PostgreSQL на Heroku, AWS RDS или управувана PostgreSQL услуга.
- Континуирана Интеграција: Поставување на CI/CD линии користејќи GitHub Actions или GitLab CI.

---

 8. Мониторинг и Логирање

- Логирање: Употреба на алатки како Winston (за Node.js) за логирање на системски настани и грешки.
- Мониторинг: Интеграција со сервиси како Prometheus или New Relic за реално време на мониторинг и метрики.

---
